Program.Sub.Preflight.Start
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.iCNT.Declare
V.Local.sTransID.Declare
V.Local.sTransSEQ.Declare
V.Local.sPO.Declare
V.Local.sLine.Declare
V.Local.sQTYOrdered.Declare
V.Local.sDate.Declare
V.Local.sRcvd.Declare
V.Local.sCost.Declare
V.Local.sUMOrd.Declare
V.Local.iLstRcvr.Declare
V.Local.sLstRcvr.Declare
V.Local.sRcvrSuff.Declare
V.Local.sNewRcvr.Declare
V.Local.sRet.Declare
V.Local.sOrdSeq.Declare
V.Local.sClose.Declare

'TJS, May 2020
'Customer: Connecticut Spring & Stamping
'Business Case: Customer is currently using Drop Ships in GSS and in order to process 
'the invoice, the PO needs to be received and shipped. Customer would like to automate 
'these transactions

'Shipment post save hook = 28532
'V.PASSED.FIRST-ORDER = Order Number, ex: 0001069
'V.PASSED.FIRST-SEQ = Order Line, ex: 0006
'Purchasing Option Std > Last Receiver Prefix 400300 seq 0000, suffix 400300 seq 0001

F.Intrinsic.Control.If(V.Caller.Hook,<>,"28532")
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.DataTable.dtP10.Exists,=,True)
	F.Data.DataTable.DeleteRow("dtP10")
	F.Data.DataTable.Close("dtP10")
F.Intrinsic.Control.EndIf

F.Data.DataTable.Create("dtP10",True)
F.Data.DataTable.AddColumn("dtP10","TRANS_ID","String")
F.Data.DataTable.AddColumn("dtP10","SEQ","String")
F.Data.DataTable.AddColumn("dtP10","TRANS","String")
F.Data.DataTable.AddColumn("dtP10","PO","String")
F.Data.DataTable.AddColumn("dtP10","PO_LINE","String")
F.Data.DataTable.AddColumn("dtP10","DATE","String")
F.Data.DataTable.AddColumn("dtP10","PUR_QTY_INV","String")
F.Data.DataTable.AddColumn("dtP10","RECEIVER","String")
F.Data.DataTable.AddColumn("dtP10","COST","Float")
F.Data.DataTable.AddColumn("dtP10","CLOSE","String")
F.Data.DataTable.AddColumn("dtP10","INV_QTY_INV","String")
F.Data.DataTable.AddColumn("dtP10","UM_ORDER","String")
F.Data.DataTable.AddColumn("dtP10","LABELPRINT","String")
F.Data.DataTable.AddColumn("dtP10","LABELQTY","Long")
F.Data.DataTable.AddColumn("dtP10","ERROR_ID","Long")

F.ODBC.Connection!conts.OpenCompanyConnection

'Get next Receiver number and suffix
F.Global.General.ReadOption("400300",3,"","0000",V.Local.iLstRcvr)
F.Global.General.ReadOption("400300",1,"","0001",V.Local.sRcvrSuff)

V.Local.sLstRcvr.Set(V.Local.iLstRcvr)
F.Intrinsic.Math.Add(V.Local.iLstRcvr,1,V.Local.sLstRcvr)

'Updating last receiver number
F.Intrinsic.String.Build("Update OP_HEADER set F_LONG = '{0}' where ID = '400300' and SEQUENCE = '0000'",V.Local.sLstRcvr.Long,V.Local.sSQL)
F.ODBC.Connection!conts.Execute(V.Local.sSQL)

F.Intrinsic.String.Build("0000{0}",V.Local.sLstRcvr,V.Local.sLstRcvr)

F.Intrinsic.String.Build("Update AP_VOUCH set VOUCH_NUM = '{0}' where VOUCH_KEY = 'R'",V.Local.sLstRcvr,V.Local.sSQL)
F.ODBC.Connection!conts.Execute(V.Local.sSQL)

F.Intrinsic.String.Build("{0}{1}",V.Local.sLstRcvr.Trim,V.Local.sRcvrSuff.Trim,V.Local.sLstRcvr)

'Get next transaction ID
V.Local.sSQL.Set("select max(TRANS_ID) as TRANS from WIRELESS_HDR")
F.ODBC.Connection!conts.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
F.Intrinsic.Math.Add(V.Local.sRet,1,V.Local.sTransID)
F.Intrinsic.String.Format(V.Local.sTransID,"000000000",V.Local.sTransID)

'Determine if this is a drop ship order line
F.Intrinsic.String.Build("select ORDER_REC from V_SHIPMENT_LINES where ORDER_NO = '{0}' and ORDER_SUFFIX = '{1}'",V.Passed.FIRST-ORDER.Trim,V.Passed.FIRST-SEQ.Trim,V.Local.sSQL)
F.ODBC.Connection!conts.ExecuteAndReturn(V.Local.sSQL,V.Local.sOrdSeq)
F.Intrinsic.String.Split(V.Local.sOrdSeq,"#$#",V.Local.sOrdSeq)

F.Intrinsic.Control.For(V.Local.iCNT,V.Local.sOrdSeq.LBound,V.Local.sOrdSeq.UBound,1)
	F.Intrinsic.String.Build("Select Cast(RTRIM(PO) as Int) as PO,RTRIM(PO_LINE) as PO_LINE from PO_DROP_SHIP where RTRIM(ORDER_NO) = '{0}' and RTRIM(ORDER_LINE) = '{1}'",V.Passed.FIRST-ORDER.Trim,V.Local.sOrdSeq(V.Local.iCNT).Trim,V.Local.sSQL)
	F.ODBC.Connection!conts.ExecuteAndReturn(V.Local.sSQL,V.Local.sSQL)
	F.Intrinsic.String.Split(V.Local.sSQL,"*!*",V.Local.sSQL)
	
	V.Local.sPO.Set(V.Local.sSQL(0))
	
	F.Intrinsic.String.Left(V.Local.sSQL(1),3,V.Local.sLine.Long)
	
	'V.Local.sLine.Set(V.Local.sSQL(1))
	
	'Exit if not drop ship line
	F.Intrinsic.Control.If(V.Local.sSQL.Trim,=,"")
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndIf
	
	V.Local.sDate.Set(V.Ambient.Date.PervasiveDate)
	
	F.Intrinsic.String.Format(V.Local.sDate,"MMDDYY",V.Local.sDate)

	'Collect order data for wireless table.
	F.Intrinsic.String.Build("Select QTY_ORDERED,QTY_SHIPPED,UM_ORDER,COST from V_SHIPMENT_LINES where RTRIM(ORDER_NO) = '{0}' and RTRIM(ORDER_SUFFIX) = '{1}' and RTRIM(ORDER_REC) = '{2}'",V.Passed.FIRST-ORDER.Trim,V.Passed.FIRST-SEQ.Trim,V.Local.sOrdSeq(V.Local.iCNT).Trim,V.Local.sSQL)
	F.ODBC.Connection!conts.ExecuteAndReturn(V.Local.sSQL,V.Local.sSQL)
	F.Intrinsic.String.Split(V.Local.sSQL,"*!*",V.Local.sSQL)
	
	V.Local.sQTYOrdered.Set(V.Local.sSQL(0))
	V.Local.sRcvd.Set(V.Local.sSQL(1))
	V.Local.sUMOrd.Set(V.Local.sSQL(2))
	V.Local.sCost.Set(V.Local.sSQL(3))
	
	F.Intrinsic.String.Format(V.Local.sCost.Trim,"###0.00",V.Local.sCost)
	
	'If partial shipment, do not close the PO line.
	F.Intrinsic.Control.If(V.Local.sRcvd,<,V.Local.sQTYOrdered)
		V.Local.sClose.Set("N")
	F.Intrinsic.Control.Else
		V.Local.sClose.Set("Y")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Format(V.Local.iCNT,"0000",V.Local.sTransSEQ)
	
	F.Data.DataTable.AddRow("dtP10","TRANS_ID",V.Local.sTransID,"SEQ",V.Local.sTransSEQ,"TRANS","P10","PO",V.Local.sPO,"PO_LINE",V.Local.sLine,"DATE",V.Local.sDate,"PUR_QTY_INV",V.Local.sRcvd,"RECEIVER",V.Local.sLstRcvr,"COST",V.Local.sCost,"CLOSE",V.Local.sClose.Trim,"INV_QTY_INV",V.Local.sRcvd,"UM_ORDER",V.Local.sUMOrd,"LABELPRINT","N","LABELQTY",0,"ERROR_ID",0)
F.Intrinsic.Control.Next(V.Local.iCNT)
'<<<<<<<<<<<<<<<<<<<<<<<<<Update Wireless tables>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

'Save WIRELESS_LINE
F.Data.DataTable.SaveToDB("dtP10","conts","WIRELESS_LINE","TRANS_ID*!*SEQ",128,"TRANS_ID@!@TRANS_ID*!*SEQ@!@SEQ*!*TRANS@!@TRANS_TYPE*!*PO@!@FIELD_1*!*PO_LINE@!@FIELD_2*!*DATE@!@FIELD_7*!*PUR_QTY_INV@!@FIELD_8*!*RECEIVER@!@Field_9*!*COST@!@FIELD_10*!*CLOSE@!@FIELD_11*!*LABELQTY@!@FIELD_18*!*LABELPRINT@!@FIELD_21*!*INV_QTY_INV@!@FIELD_22*!*UM_ORDER@!@FIELD_24*!*ERROR_ID@!@ERROR_ID")
F.Data.DataTable.DeleteRow("dtP10")

'Save WIRELESS_HDR
F.ODBC.Connection!conts.OpenRecordsetRW("rstNew","SELECT * from WIRELESS_HDR")
F.ODBC.conts!rstNew.AddNew
F.ODBC.conts!rstNew.Set!TRANS_ID(V.Local.sTransID)
F.ODBC.conts!rstNew.Set!TRANS_TYPE("P10")
F.ODBC.conts!rstNew.Set!ATTEMPTED_DATE("00000000")
F.ODBC.conts!rstNew.Set!ATTEMPTED_TIME("00000000")
F.ODBC.conts!rstNew.Set!LABEL_PRINTER("UPID:1")
F.ODBC.conts!rstNew.Set!USER_ID(V.Caller.User)
F.ODBC.conts!rstNew.Set!BATCH(0)
F.ODBC.conts!rstNew.Update
F.ODBC.conts!rstNew.Close
'<<<<<<<<<<<<<<<<<<<<<<<<<Update Wireless tables>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

F.Data.DataTable.DeleteRow("dtP10")
F.Data.DataTable.Close("dtP10")

F.ODBC.Connection!conts.Close

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Error,"SubRoutine",V.Ambient.CurrentSubroutine,"eNumber",V.Ambient.ErrorNumber,"eDescription",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.Error.Start
V.Local.sError.Declare
V.Local.iRet.Declare
V.Local.sSep.Declare

F.Intrinsic.String.Build("-------------------------------------------------------------------------------------",,V.Local.sSep)
F.Intrinsic.String.Build("({5}-{6}){0}{7}{0}Project: {4}{0}{7}{0}Sub: {1}{0}Error: {2}, {3}", V.Ambient.NewLine, V.Args.SubRoutine, V.Args.eNumber, V.Args.eDescription,V.Caller.ScriptFile,V.Ambient.Date, V.Ambient.Time,V.Local.sSep,V.Local.sError)
F.Intrinsic.UI.Msgbox(V.Local.sError,"Error",V.Local.iRet)
Program.Sub.Error.End
